---
title: "VSURF"
author: "Miguel Fudolig"
format:
  html:
    toc: true
    toc-location: left
    toc-depth: 3
---


```{r, output=F}
library(tidyverse)
library(ggplot2)
library(lavaan)
library(car)
library(caret)
library(ggRandomForests)
library(VSURF)
library(glmnet)
library(Boruta)
library(doParallel)
```

# Data set  

This data set is from the 2015 Asian American Quality of Life survey. Participants are from Austin, Texas.

## Input data set


```{r}
qol <- read_csv("AAQoL.csv") |> mutate(across(where(is.character), ~as.factor(.x))) |> 
  mutate(`English Difficulties`=relevel(`English Difficulties`,ref="Not at all"),
         `English Speaking`=relevel(`English Speaking`,ref="Not at all"),
         Ethnicity = relevel(Ethnicity,ref="Chinese"),
         Religion=relevel(Religion,ref="None")) |> 
  mutate(Income_median = case_match(Income,"$0 - $9,999"~"Below",
                                         "$10,000 - $19,999" ~"Below",
                                         "$20,000 - $29,999"~"Below",
                                         "$30,000 - $39,999"~"Below",
                                         "$40,000 - $49,999"~"Below",
                                         "$50,000 - $59,999"~"Below",
                                         "$60,000 - $69,999"~"Above",
                                         "$70,000 and over"~"Above",
                                          .default=Income)) |> 
  mutate(Income_median = factor(Income_median, levels=c("Below","Above"))) |> 
  mutate(across(`Familiarity with America`:`Familiarity with Ethnic Origin`,~factor(.x,levels=c("Very low","Low", "High", "Very high"))),
         across(`Identify Ethnically`,~factor(.x,levels=c("Not at all","Not very close","Somewhat close","Very close"))),
         across(`Belonging`,~factor(.x,levels=c("Not at all","Not very much","Somewhat","Very much"))),
         `Primary Language` = as.factor(`Primary Language`))
qol |> DT::datatable()
```

# Family

```{r}
rfdata <- qol |> filter(Family %in% c("No","Yes")) |> 
  mutate(Family=droplevels(Family)) |> 
  select(Family, Ethnicity, Age, Gender,Religion, `Full Time Employment`,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) |> 
    na.omit() |>
  as.data.frame() |> 
  rename_with(make.names)

imbal <- ROSE::ROSE(Family~.,
                          data=rfdata,
                          seed=3)$data


# VSURF(Family~.,imbal,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod
VSURF(Family~.,rfdata,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod

vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```

## Importance

```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "VSURF_importance_family.png", width=8, height=12,units="in")
```

## Logistic regression (Interpretation)

```{r}
lr <- rfdata |> select(Family,names(rfdata[,-1])[vsurf.mod$varselect.pred])

lr_mod <- glm(Family~.,family=binomial,data=lr)
summary(lr_mod)
car::Anova(lr_mod)


broom::tidy(lr_mod,exponentiate=T,conf.int=T) |> DT::datatable()

```

## CV LASSO

```{r}
x <- makeX(rfdata[,-1])
y <- rfdata$Family


cv.glmnet(x,y,family="binomial", type.measure = "auc")-> modcv
modcv$lambda.1se
coef(modcv,s="lambda.1se")
print(modcv)
```


# Health Professionals

```{r}
rfdata <- qol |> select(`Heal Professionals`, Ethnicity, Age, Gender,Religion, `Full Time Employment`,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) |> 
    na.omit() |>
  as.data.frame() |> 
  rename_with(make.names)

imbal <- ROSE::ROSE(Heal.Professionals~.,
                          data=rfdata,
                          seed=3)$data

# VSURF(Heal.Professionals~.,imbal,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod
VSURF(Heal.Professionals~.,rfdata,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod

vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```

## Importance

```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "VSURF_importance_hp.png", width=12, height=8,units="in")
```

## Logistic regression (Interpretation)

```{r}
lr <- rfdata |> select(Heal.Professionals,names(rfdata[,-1])[vsurf.mod$varselect.pred])

lr_mod <- glm(Heal.Professionals~.,family=binomial,data=lr)
summary(lr_mod)
car::Anova(lr_mod)


broom::tidy(lr_mod,exponentiate=T,conf.int=T)|> DT::datatable()


```

## CV LASSO
```{r}
x <- makeX(rfdata[,-1])
y <- rfdata$Heal.Professionals


cv.glmnet(x,y,family="binomial", type.measure = "auc")-> modcv
modcv$lambda.1se
coef(modcv,s="lambda.1se")
print(modcv)
```

# Physical Check-up

```{r}
#install.packages("randomForestSRC)

rfdata <- qol |> 
  select(`Physical Check-up`,Ethnicity, Age, Gender,Religion, `Full Time Employment`,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) %>%
  na.omit() |> 
  rename(Employment=`Full Time Employment`,
         EnglishSpeak=`English Speaking`,
         EnglishDiff=`English Difficulties`) |> 
  as.data.frame() |> 
  rename_with(make.names)

imbal <- ROSE::ROSE(Physical.Check.up~.,
                          data=rfdata,
                          seed=3)$data

# VSURF(Physical.Check.up~.,imbal,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod
VSURF(Physical.Check.up~.,rfdata,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod

vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```


## Importance

```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "VSURF_importance_PC.png", width=12, height=8,units="in")
```

## Logistic regression (Interpretation)

```{r}
lr <- rfdata |> select(Physical.Check.up,names(rfdata[,-1])[vsurf.mod$varselect.interp])

lr_mod <- glm(Physical.Check.up~.,family=binomial,data=lr)
summary(lr_mod)
car::Anova(lr_mod)


broom::tidy(lr_mod,exponentiate=T,conf.int=T)|> 
  mutate(across(estimate:conf.high,~round(.x,3))) |> 
  DT::datatable()


```

## CV LASSO

```{r}
x <- makeX(rfdata[,-1])
y <- rfdata$Physical.Check.up


cv.glmnet(x,y,family="binomial", type.measure = "auc")-> modcv
modcv$lambda.1se
coef(modcv,s="lambda.1se")
print(modcv)
```

## Boruta

```{r}
set.seed(123)

Boruta(Physical.Check.up~.,
       data=rfdata,
       doTrace=2,
       ) ->pc_boruta

plot(pc_boruta,las=2,cex.axis=0.5)
pc_boruta
pc_boruta$finalDecision
```

## Naive Bayes Classifier

```{r}
fitControl <- trainControl(## 10-fold CV
                           method = "repeatedcv",
                           number = 10,
                           ## repeated ten times
                           repeats = 10)


cl <- makePSOCKcluster(10)
registerDoParallel(cl)
set.seed(825)
rf_fit <- train(Physical.Check.up ~ ., data = rfdata, 
                 method = "naive_bayes", 
                 trControl = fitControl,
                 ## This last option is actually one
                 ## for gbm() that passes through
                 verbose = FALSE)

stopCluster(cl)
varImp(rf_fit)
```


# Dental Check-up

```{r}
rfdata <- qol |> select(`Dentist Check-up`,Ethnicity, Age, Gender,Religion, `Full Time Employment`,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) |> 
    na.omit() |>
  as.data.frame() |> 
  rename_with(make.names)

imbal <- ROSE::ROSE(Dentist.Check.up~.,
                          data=rfdata,
                          seed=3)$data

# VSURF(Dentist.Check.up~.,imbal,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod
VSURF(Dentist.Check.up~.,rfdata,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod

vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```


## Importance

```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "VSURF_importance_Dc.png", width=12, height=8,units="in")
```

## Logistic regression (Interpretation)

```{r}
lr <- rfdata |> select(Dentist.Check.up,names(rfdata[,-1])[vsurf.mod$varselect.interp])

lr_mod <- glm(Dentist.Check.up~.,family=binomial,data=lr)
summary(lr_mod)
car::Anova(lr_mod)


broom::tidy(lr_mod,exponentiate=T,conf.int=T)|>
  mutate(across(estimate:conf.high,~round(.x,3))) |> 
  DT::datatable()


```

## CV LASSO

```{r}
x <- makeX(rfdata[,-1])
y <- rfdata$Dentist.Check.up


cv.glmnet(x,y,family="binomial", type.measure = "auc")-> modcv
modcv$lambda.1se
coef(modcv,s="lambda.1se")
print(modcv)
```

## Boruta

```{r}
set.seed(123)

Boruta(Dentist.Check.up~.,
       data=rfdata,
       doTrace=2,
       ) ->pc_boruta

plot(pc_boruta,las=2,cex.axis=0.5)
pc_boruta
pc_boruta$finalDecision
```

## Naive Bayes Classifier

```{r}
fitControl <- trainControl(## 10-fold CV
                           method = "repeatedcv",
                           number = 10,
                           ## repeated ten times
                           repeats = 10)


cl <- makePSOCKcluster(10)
registerDoParallel(cl)
set.seed(825)
rf_fit <- train(Dentist.Check.up ~ ., data = rfdata, 
                 method = "naive_bayes", 
                 trControl = fitControl,
                 ## This last option is actually one
                 ## for gbm() that passes through
                 verbose = FALSE)

stopCluster(cl)
varImp(rf_fit)
```

# Folkmedicine

```{r}
rfdata <- qol |> select(`Folkmedicine`,Ethnicity, Age, Gender,Religion, `Full Time Employment`,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) |> 
    na.omit() |>
  as.data.frame() |> 
  rename_with(make.names)

imbal <- ROSE::ROSE(Folkmedicine~.,
                          data=rfdata,
                          seed=3)$data

# VSURF(Folkmedicine~.,imbal,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod
VSURF(Folkmedicine~.,rfdata,na.action="na.omit",parallel=T,verbose=F)->vsurf.mod

vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```


## Importance

```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "VSURF_importance_Alt.png", width=12, height=8,units="in")
```

## Logistic regression (Interpretation)

```{r}
lr <- rfdata |> select(Folkmedicine,names(rfdata[,-1])[vsurf.mod$varselect.interp])

lr_mod <- glm(Folkmedicine~.,family=binomial,data=lr)
summary(lr_mod)
car::Anova(lr_mod)

broom::tidy(lr_mod,exponentiate=T,conf.int=T)|>
  mutate(across(estimate:conf.high,~round(.x,3))) |> 
  DT::datatable()

```

## CV LASSO
```{r}
x <- makeX(rfdata[,-1])
y <- rfdata$Folkmedicine


cv.glmnet(x,y,family="binomial", type.measure = "auc")-> modcv
modcv$lambda.1se
coef(modcv,s="lambda.1se")
print(modcv)
```

## Boruta

```{r}
set.seed(123)

Boruta(Folkmedicine~.,
       data=rfdata,
       doTrace=2,
       ) ->pc_boruta

plot(pc_boruta,las=2,cex.axis=0.5)
pc_boruta
pc_boruta$finalDecision
```

## Naive Bayes Classifier

```{r}
fitControl <- trainControl(## 10-fold CV
                           method = "repeatedcv",
                           number = 10,
                           ## repeated ten times
                           repeats = 10)


cl <- makePSOCKcluster(10)
registerDoParallel(cl)
set.seed(825)
rf_fit <- train(Folkmedicine ~ ., data = rfdata, 
                 method = "naive_bayes", 
                 trControl = fitControl,
                 ## This last option is actually one
                 ## for gbm() that passes through
                 verbose = FALSE)

stopCluster(cl)
varImp(rf_fit)
```
