---
title: "QOL Healthcare Utilization (VSURF and Analysis of Deviance)"
author: "Miguel Fudolig"
format:
  html:
    toc: true
    toc-depth: 3
    toc-location: left
    embed-resources: true
    code-fold: true
---

```{r, output=F}
library(tidyverse)
library(ggplot2)
library(car)
library(caret)
library(rFerns)
library(VSURF)
library(glmnet)
library(Boruta)
library(doParallel)
library(Hmisc)
library(mlbench)
library(pROC)
```


# Setup

```{r}
qol <- read_csv("AAQoL.csv") |> mutate(across(where(is.character), ~as.factor(.x))) |> 
  mutate(`English Difficulties`=relevel(`English Difficulties`,ref="Not at all"),
         `English Speaking`=relevel(`English Speaking`,ref="Not at all"),
         Ethnicity = relevel(Ethnicity,ref="Chinese"),
         Religion=relevel(Religion,ref="None")) |> 
  mutate(Income_median = case_match(Income,"$0 - $9,999"~"Below",
                                         "$10,000 - $19,999" ~"Below",
                                         "$20,000 - $29,999"~"Below",
                                         "$30,000 - $39,999"~"Below",
                                         "$40,000 - $49,999"~"Below",
                                         "$50,000 - $59,999"~"Below",
                                         "$60,000 - $69,999"~"Above",
                                         "$70,000 and over"~"Above",
                                          .default=Income)) |> 
  mutate(Income_median = factor(Income_median, levels=c("Below","Above"))) |> 
  mutate(across(`Familiarity with America`:`Familiarity with Ethnic Origin`,~factor(.x,levels=c("Very low","Low", "High", "Very high"))),
         across(`Identify Ethnically`,~factor(.x,levels=c("Not at all","Not very close","Somewhat close","Very close"))),
         across(`Belonging`,~factor(.x,levels=c("Not at all","Not very much","Somewhat","Very much"))),
         `Primary Language` = as.factor(`Primary Language`))

qol |> DT::datatable()
```

## Standardizing Age, Duration of Residency, and 

```{r}
qol <- qol |> mutate(across(c(Age,`Duration of Residency`,`Education Completed`),~scale(.x)))
```


# Unmet Health Need



## VSURF Approach

::: callout-important
We will be using the Prediction Set to run an analysis of deviance to check model performance.
:::

```{r}
rfdata <- qol |> select(`Unmet Health Need`,Ethnicity, Age, Gender,Religion,`Marital Status`, `Full Time Employment`:Retired,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) |> 
    na.omit() |>
  as.data.frame() |> 
  rename_with(make.names)
```

```{r}
rfdata |> gtsummary::tbl_summary(include=Unmet.Health.Need)
```


```{r}

n_minority <- rfdata |> filter(Unmet.Health.Need=="Yes")|> nrow()

rf_options_for_vsurf <- list(
  sampsize = c(n_minority, n_minority), # Sample 'n_minority' from each class
  strata = rfdata[,1],                     # Stratify by the response variable
  importance = TRUE                     # Ensure importance is calculated
)
set.seed(123321)
VSURF(Unmet.Health.Need~.,
      rfdata,
      na.action="na.omit",
      parallel=T,verbose=F,
      rf.options=rf_options_for_vsurf)->vsurf.mod

vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```

### Importance

```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "FinalFigures/VSURF_importance_unmethealth.png", width=6, height=4.5,units="in")
```

### Analysis of Deviance Using the Prediction Set

```{r}

all_formula <- Unmet.Health.Need~.
pred_vars <- names(rfdata[,-1])[vsurf.mod$varselect.pred]


pred_vars <- if("Ethnicity" %in% pred_vars){
  pred_vars
} else {
  c(pred_vars,"Ethnicity")
  }
mod_form <- reformulate(pred_vars, response="Unmet.Health.Need")

mod_form_noEth <- reformulate(pred_vars[!pred_vars %in%c("Ethnicity")], response="Unmet.Health.Need")

options(contrasts = c("contr.sum","contr.poly"))
mod1 <- glm(mod_form, family="binomial", data=rfdata)
mod2 <- glm(mod_form_noEth, family="binomial", data=rfdata)
anova(mod2,mod1)

performance::check_model(mod1)
data.frame(BIC_ethnicity = BIC(mod1),
           BIC_noethnicity=BIC(mod2))

car::Anova(mod1, test.statistic = "F")
summary(mod1)

mod1 |>  emmeans::emmeans(~Ethnicity, type="response")
mod1 |>  emmeans::emmeans(~Ethnicity) |> emmeans::contrast(method="eff") |> summary(infer=T)
```

# Unmet Dental Need

## VSURF Approach

```{r}
rfdata <- qol |> select(`Unmet Dental Needs`,Ethnicity, Age, Gender,Religion,`Marital Status`, `Full Time Employment`:Retired,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) |> 
    na.omit() |>
  as.data.frame() |> 
  rename_with(make.names)

```

```{r}
rfdata |> gtsummary::tbl_summary(include=Unmet.Dental.Needs)
```

```{r}
n_minority <- rfdata |> filter(Unmet.Dental.Needs=="Yes")|> nrow()
set.seed(123321)
rf_options_for_vsurf <- list(
  sampsize = c(n_minority, n_minority), # Sample 'n_minority' from each class
  strata = rfdata[,1],                     # Stratify by the response variable
  importance = TRUE                     # Ensure importance is calculated
)

VSURF(Unmet.Dental.Needs~.,
      rfdata,
      na.action="na.omit",
      parallel=T,verbose=F,
      rf.options=rf_options_for_vsurf)->vsurf.mod
vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```

### Importance

```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "FinalFigures/VSURF_importance_unmetdental.png", width=6, height=4.5,units="in")
```

::: callout-note
Dental Insurance is the only variable in the Prediction Set, which means Ethnicity might not be a significant predictor of unmet dental needs.
:::

## Analysis of Deviance

```{r}

pred_vars <- c(names(rfdata[,-1])[vsurf.mod$varselect.pred],"Ethnicity")
mod_form <- reformulate(pred_vars, response="Unmet.Dental.Needs")

mod_form_noEth <- reformulate(pred_vars[!pred_vars %in%c("Ethnicity")], response="Unmet.Dental.Needs")
mod1 <- glm(mod_form, family="binomial", data=rfdata)
mod2 <- glm(mod_form_noEth, family="binomial", data=rfdata)
anova(mod2,mod1)

performance::check_model(mod1)
data.frame(BIC_ethnicity = BIC(mod1),
           BIC_noethnicity=BIC(mod2))

summary(mod1)
mod1 |>  emmeans::emmeans(~Ethnicity, type="response")
mod1 |>  emmeans::emmeans(~Ethnicity) |> emmeans::contrast(method="eff")|> summary(infer=T)
```

::: callout-note
The non-significant analysis of deviance implies that Ethnicity might not be a significant predictor of unmet dental needs.
:::

# Physical Check-up

## VSURF

```{r}

rfdata <- qol |> 
  select(`Physical Check-up`,Ethnicity, Age, Gender,Religion,`Marital Status`, `Full Time Employment`:Retired,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) |> 
  na.omit() |> 
  rename(Employment=`Full Time Employment`,
         EnglishSpeak=`English Speaking`,
         EnglishDiff=`English Difficulties`) |> 
  as.data.frame() |> 
  rename_with(make.names)

```

```{r}
rfdata |> gtsummary::tbl_summary(include=Physical.Check.up)
```

```{r}
n_minority <- rfdata |> filter(Physical.Check.up=="0")|> nrow()

rf_options_for_vsurf <- list(
  sampsize = c(n_minority, n_minority), # Sample 'n_minority' from each class
  strata = rfdata[,1],                     # Stratify by the response variable
  importance = TRUE                     # Ensure importance is calculated
)

set.seed(123321)
set.seed(123321)
VSURF(Physical.Check.up~.,
      rfdata,
      na.action="na.omit",
      parallel=T,verbose=F,
      rf.options=rf_options_for_vsurf)->vsurf.mod
vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```


```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "FinalFigures/VSURF_importance_PC.png", width=6, height=4.5,units="in")
```



## Analysis of Deviance

```{r}

pred_vars <- c(names(rfdata[,-1])[vsurf.mod$varselect.pred],"Ethnicity")
mod_form <- reformulate(pred_vars, response="Physical.Check.up")

mod_form_noEth <- reformulate(pred_vars[!pred_vars %in%c("Ethnicity")], response="Physical.Check.up")
mod1 <- glm(mod_form, family="binomial", data=rfdata)
mod2 <- glm(mod_form_noEth, family="binomial", data=rfdata)
anova(mod2,mod1)

performance::check_model(mod1)
data.frame(BIC_ethnicity = BIC(mod1),
           BIC_noethnicity=BIC(mod2))

summary(mod1)

mod1 |>  emmeans::emmeans(~Ethnicity, type="response")
mod1 |>  emmeans::emmeans(~Ethnicity) |> emmeans::contrast(method="eff")|> summary(infer=T)
```

# Dental Check-up

## VSURF

```{r}

rfdata <- qol |> 
  select(`Dentist Check-up`,Ethnicity, Age, Gender,Religion,`Marital Status`, `Full Time Employment`:Retired,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) |> 
  na.omit() |> 
  rename(Employment=`Full Time Employment`,
         EnglishSpeak=`English Speaking`,
         EnglishDiff=`English Difficulties`) |> 
  as.data.frame() |> 
  rename_with(make.names)
```

```{r}
rfdata |> gtsummary::tbl_summary(include=Dentist.Check.up)
```

```{r}
n_minority <- rfdata |> filter(Dentist.Check.up=="0") |> nrow()

rf_options_for_vsurf <- list(
  sampsize = c(n_minority, n_minority), # Sample 'n_minority' from each class
  strata = rfdata[,1],                     # Stratify by the response variable
  importance = TRUE                     # Ensure importance is calculated
)

set.seed(123321)
VSURF(Dentist.Check.up~.,
      rfdata,
      na.action="na.omit",
      parallel=T,verbose=F,
      rf.options=rf_options_for_vsurf)->vsurf.mod

vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```


```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "FinalFigures/VSURF_importance_DC.png", width=6, height=4.5,units="in")
```



## Analysis of Deviance

```{r}

pred_vars <- c(names(rfdata[,-1])[vsurf.mod$varselect.pred],"Ethnicity")
mod_form <- reformulate(pred_vars, response="Dentist.Check.up")

mod_form_noEth <- reformulate(pred_vars[!pred_vars %in%c("Ethnicity")], response="Dentist.Check.up")
mod1 <- glm(mod_form, family="binomial", data=rfdata)
mod2 <- glm(mod_form_noEth, family="binomial", data=rfdata)
anova(mod2,mod1)

performance::check_model(mod1)
data.frame(BIC_ethnicity = BIC(mod1),
           BIC_noethnicity=BIC(mod2))

summary(mod1)
mod1 |>  emmeans::emmeans(~Ethnicity, type="response")
mod1 |>  emmeans::emmeans(~Ethnicity) |> emmeans::contrast(method="eff", type="response") |> summary(infer=T)
```


# Folk medicine

## VSURF
```{r}
rfdata <- qol |> select(`Folkmedicine`,Ethnicity, Age, Gender,Religion,`Marital Status`, `Full Time Employment`:Retired,  Income_median, `US Born`:`Discrimination`,`Health Insurance`,`Dental Insurance`) |> 
    na.omit() |>
  as.data.frame() |> 
  rename_with(make.names)

```

```{r}
rfdata |> gtsummary::tbl_summary(include=Folkmedicine)
```

```{r}
n_minority <- rfdata |> filter(Folkmedicine=="Yes") |> nrow()

rf_options_for_vsurf <- list(
  sampsize = c(n_minority, n_minority), # Sample 'n_minority' from each class
  strata = rfdata[,1],                     # Stratify by the response variable
  importance = TRUE                     # Ensure importance is calculated
)

set.seed(123321)

VSURF(Folkmedicine~.,
      rfdata,
      na.action="na.omit",
      parallel=T,
      verbose=F,
      rf.options=rf_options_for_vsurf)->vsurf.mod

vsurf.mod |> summary()
names(rfdata[,-1])[vsurf.mod$varselect.pred]
names(rfdata[,-1])[vsurf.mod$varselect.interp]
plot(vsurf.mod)
vsurf.mod$mean.perf
```


## Importance

```{r}
vi<- data.frame(Variable=names(rfdata[,-1])[vsurf.mod$imp.mean.dec.ind],
                Importance = vsurf.mod$imp.mean.dec,
                sd_Importance = vsurf.mod$imp.sd.dec
)|> 
  mutate(fill = case_when(Variable=="Ethnicity"~"red",
                                                 .default="black"))

vi |> mutate(across(Importance:sd_Importance,~round(.x,5)))

importance_plot <- ggplot(vi, aes(x = reorder(Variable, Importance), y = Importance, fill=fill))+
  geom_bar(stat = "identity",alpha=0.4) +
  geom_errorbar(aes(ymin=Importance-sd_Importance, ymax = Importance+sd_Importance))+
  
  labs(title = "Variable Importance", x = "Variable", y = "Importance") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_fill_manual(values=c("black","red"),
                    guide="none")
  
plot(importance_plot)
ggsave(filename = "FinalFigures/VSURF_importance_AltMedicine.png", width=6, height=4.5,units="in")
```

## Analysis of Deviance

```{r}

pred_vars <- c(names(rfdata[,-1])[vsurf.mod$varselect.pred])
mod_form <- reformulate(pred_vars, response="Folkmedicine")

mod_form_noEth <- reformulate(pred_vars[!pred_vars %in%c("Ethnicity")], response="Folkmedicine")
mod1 <- glm(mod_form, family="binomial", data=rfdata)
mod2 <- glm(mod_form_noEth, family="binomial", data=rfdata)
anova(mod2,mod1)

performance::check_model(mod1)
data.frame(BIC_ethnicity = BIC(mod1),
           BIC_noethnicity=BIC(mod2))

summary(mod1)

mod1 |>  emmeans::emmeans(~Ethnicity, type="response")
mod1 |>  emmeans::emmeans(~Ethnicity) |> emmeans::contrast(method="eff", type="response") |> summary(infer=T)
```

